import { globalValues } from "./globals";

it("global values", () => {
	expect(Object.keys(globalValues)).toStrictEqual([
		"Response",
		"NoContentHttpResponse",
		"RedirectHttpResponse",
		"MultipleChoicesHttpResponse",
		"MovedPermanentlyHttpResponse",
		"FoundHttpResponse",
		"SeeOtherHttpResponse",
		"NotModifiedHttpResponse",
		"TemporaryRedirectHttpResponse",
		"PermanentRedirectHttpResponse",
		"DownloadFileHttpResponse",
		"OkHttpResponse",
		"CreatedHttpResponse",
		"AcceptedHttpResponse",
		"ResetContentHttpResponse",
		"PartialContentHttpResponse",
		"BadRequestHttpResponse",
		"UnauthorizedHttpResponse",
		"ForbiddenHttpResponse",
		"NotFoundHttpResponse",
		"MethodNotAllowedHttpResponse",
		"NotAcceptableHttpResponse",
		"ProxyAuthenticationRequiredHttpResponse",
		"RequestTimeoutHttpResponse",
		"ConflictHttpResponse",
		"GoneHttpResponse",
		"LengthRequiredHttpResponse",
		"PreconditionFailedHttpResponse",
		"PayloadTooLargeHttpResponse",
		"UriTooLongHttpResponse",
		"UnsupportedMediaTypeHttpResponse",
		"RangeNotSatisfiableHttpResponse",
		"ExpectationFailedHttpResponse",
		"ImATeapotHttpResponse",
		"UnprocessableEntityHttpResponse",
		"UpgradeRequiredHttpResponse",
		"PreconditionRequiredHttpResponse",
		"TooManyRequestsHttpResponse",
		"RequestHeaderFieldsTooLargeHttpResponse",
		"UnavailableForLegalReasonsHttpResponse",
		"InternalServerErrorHttpResponse",
		"NotImplementedHttpResponse",
		"BadGatewayHttpResponse",
		"ServiceUnavailableHttpResponse",
		"GatewayTimeoutHttpResponse",
		"HttpVersionNotSupportedHttpResponse",
		"VariantAlsoNegotiatesHttpResponse",
		"LoopDetectedHttpResponse",
		"NotExtendedHttpResponse",
		"NetworkAuthenticationRequiredHttpResponse",
		"zod",
		"zoderce",
		"useBuilder",
		"createChecker",
		"createPresetChecker",
		"createTypeInput",
	]);
});
