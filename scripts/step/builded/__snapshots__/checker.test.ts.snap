// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`BuildedCheckerStep > toString options: function, result: string, indexing 1`] = `
"
/* beforeCheckerStep(index: 1) */
/* end_block */


				result = this.steps[1].checkerFunction(
					this.steps[1].params.input(floor.pickup),
					(info, data) => ({info, data}),
					this.steps[1].params.options(floor.pickup),
				);

				
/* beforeTreatResultCheckerStep(index: 1) */
/* end_block */


				if(this.steps[1].params.result !== result.info){
					result = this.steps[1].params.catch(
						result.info, 
						result.data, 
						floor.pickup
					);

					
				let temp = this.steps[1].responseZodSchema.safeParse(result);

				if(!temp.success){
					throw new this.ContractResponseError(temp.error, result);
				}
			

					break Execution;
				}

				
/* beforeIndexingResultCheckerStep(index: 1) */
/* end_block */


				floor.drop(this.steps[1].params.indexing, result.data)
				

/* afterCheckerStep(index: 1) */
/* end_block */
"
`;

exports[`BuildedCheckerStep > toString options: object, result: array 1`] = `
"
/* beforeCheckerStep(index: 1) */
/* end_block */


		if(!this.steps[1].params.skip(floor.pickup)){
			
				result = this.steps[1].checkerFunction(
					this.steps[1].params.input(floor.pickup),
					(info, data) => ({info, data}),
					this.steps[1].params.options,
				);

				
/* beforeTreatResultCheckerStep(index: 1) */
/* end_block */


				if(!this.steps[1].params.result.includes(result.info)){
					result = this.steps[1].params.catch(
						result.info, 
						result.data, 
						floor.pickup
					);

					
				let temp = this.steps[1].responseZodSchema.safeParse(result);

				if(!temp.success){
					throw new this.ContractResponseError(temp.error, result);
				}
			

					break Execution;
				}

				
/* beforeIndexingResultCheckerStep(index: 1) */
/* end_block */


				
				
		}
		

/* afterCheckerStep(index: 1) */
/* end_block */
"
`;
